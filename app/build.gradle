plugins {
    id 'com.android.application'
}

android {
    compileSdkVersion build_version.compile_sdk
    buildToolsVersion build_version.build_tools
    defaultConfig {
        multiDexEnabled true
        applicationId config.app.package
        minSdkVersion build_version.min_sdk
        targetSdkVersion build_version.target_sdk
        versionCode config.app.versionCode
        versionName config.app.versionName

        //版本名后面添加一句话，意思就是flavor dimension 它的维度就是该版本号，这样维度就是都是统一的了
        //用来解决All flavors must now belong to a named flavor dimension问题
        flavorDimensions "versionCode"
//        ndk {
//            abiFilters "armeabi","armeabi-v7a","x86","mips"
//        }
    }

    signingConfigs {
        release {
            storeFile file('../key/Harper_demo2.jks')
            storePassword '654321'
            keyAlias 'Harper_demo2'
            keyPassword '654321'
        }
    }

    lintOptions {
//        checkReleaseBuilds false
        abortOnError false
        disable 'GoogleAppIndexingWarning'
    }

    productFlavors {
        //多渠道打包
        dev {
            applicationId "com.sun.demo2"
            manifestPlaceholders = [
                    APP_NAME     : "Harper测试",
                    UMENG_APP_KEY: config.app.umeng_app_key //友盟
            ]
            buildConfigField "String", "Base_URL", config.server.urlTest
            buildConfigField "String", "Base_URL_H5", config.server.urlH5Test
            buildConfigField "boolean", "VAR_BOOLEAN", 'false'
            buildConfigField "String", "VAR_STRING", '"我是String"'
        }
        pro {
            applicationId "com.sun.demo2"
            manifestPlaceholders = [
                    APP_NAME     : "Harper",
                    UMENG_APP_KEY: config.app.umeng_app_key //友盟
            ]
            buildConfigField "String", "Base_URL", config.server.urlRelease
            buildConfigField "String", "Base_URL_H5", config.server.urlH5Release
            buildConfigField "boolean", "VAR_BOOLEAN", 'false'
            buildConfigField "String", "VAR_STRING", '"我是String"'
        }
    }

    //打包命名
    android.applicationVariants.all { variant ->
        variant.outputs.all {
            def date = new Date().format("yyyyMMddHHmm", TimeZone.getTimeZone("GMT+08"))
            if (variant.buildType.name == 'debug') {
                outputFileName = "harper_${date}.apk"
            }
            if (variant.buildType.name == 'release') {
                outputFileName = "harper_${versionName}_${date}.apk"
            }
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.release
        }
        release {
            //开启混淆
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    compileOptions {
        sourceCompatibility build_version.version_java
        targetCompatibility build_version.version_java
    }

    //老的dataBinding启动方式报警告：DSL element 'android.dataBinding.enabled' is obsolete and has been replaced with 'android.buildFeatu
    //老的dataBinding启动方式报警告：It will be removed in version 7.0 of the Android Gradle plugin
    //新的启动dataBinding方式
    buildFeatures {
        dataBinding = true
    }
}

dependencies {
    //引入libs中的aar文件(下拉菜单MaterialSpinner)
    implementation fileTree(include: ['*.jar', '*.aar'], dir: 'libs')

    implementation ver.constraintlayout
    implementation ver.multidex
    implementation ver.palette
    implementation ver.xUtil
    implementation ver.lifecycle_extensions

    //分享
    implementation ver.umsdk_common
    implementation ver.umsdk_asms
    implementation ver.umsdk_link
    implementation ver.umsdk_share_core
    implementation ver.umsdk_share_board
    implementation ver.umsdk_share_wx
    implementation ver.wechat_opensdk
    //腾讯地图
    implementation ver.tencentLocationSdk
    implementation ver.tencent_map_vector

    //webSocket
    implementation ver.webSocket
    implementation ver.slidinguppanel

    implementation project(':LibBase')
    implementation project(':LibChart')
    implementation project(':LibBdFace')
    implementation project(':LibMedia')
    implementation project(':Libraries')
}